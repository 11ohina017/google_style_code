From: <Saved by Blink>
Snapshot-Content-Location: http://localhost/sphinx/docs/_build/index.html#document-example_google
Subject: Example Google Style Python Docstrings
Date: Sun, 28 Jul 2019 08:12:06 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----"


------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----
Content-Type: text/html
Content-ID: <frame-63F71E84B4707938CD7A695C11C375C9@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost/sphinx/docs/_build/index.html#document-example_google

<!DOCTYPE html><html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta htt=
p-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
   =20
    <title>Example Google Style Python Docstrings</title>
    <link rel=3D"stylesheet" href=3D"http://localhost/sphinx/docs/_build/=
_static/bizstyle.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://localhost/sphinx/docs/_build/=
_static/pygments.css" type=3D"text/css">
   =20
   =20
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"index" title=3D"Index" href=3D"http://localhost/sphinx/d=
ocs/_build/genindex.html">
    <link rel=3D"search" title=3D"Search" href=3D"http://localhost/sphinx=
/docs/_build/search.html">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width,initial-scale=
=3D1.0">
    <!--[if lt IE 9]>
    <script type=3D"text/javascript" src=3D"_static/css3-mediaqueries.js"><=
/script>
    <![endif]-->
  </head><body>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://localhost/sph=
inx/docs/_build/index.html#document-index">Example Google Style Python Docstrings</a> =C2=
=BB</li>=20
      </ul>
    </div>
      <div class=3D"sphinxsidebar" role=3D"navigation" aria-label=3D"main n=
avigation">
        <div class=3D"sphinxsidebarwrapper">
  <h3><a href=3D"http://localhost/sphinx/docs/_build/index.html#document-=
index">Table of Contents</a></h3>
  <p class=3D"caption"><span class=3D"caption-text">Contents:</span></p>
<ul>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"http://10.=
11.12.13/sphinx/docs/_build/index.html#document-example_google">example_goo=
gle module</a></li>
</ul>

        </div>
      </div>

    <div class=3D"document">
      <div class=3D"documentwrapper">
        <div class=3D"bodywrapper">
          <div class=3D"body" role=3D"main">
           =20
  <div class=3D"section" id=3D"welcome-to-src-s-documentation">
<h1>Welcome to src=E2=80=99s documentation!<a class=3D"headerlink" href=3D"=
http://localhost/sphinx/docs/_build/index.html#welcome-to-src-s-documenta=
tion" title=3D"Permalink to this headline">=C2=B6</a></h1>
<div class=3D"toctree-wrapper compound">
<span id=3D"document-example_google"></span><div class=3D"section" id=3D"mo=
dule-example_google">
<span id=3D"example-google-module"></span><h2>example_google module<a class=
=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.html#mo=
dule-example_google" title=3D"Permalink to this headline">=C2=B6</a></h2>
<p>Example Google style docstrings.</p>
<p>This module demonstrates documentation as specified by the <a class=3D"r=
eference external" href=3D"http://google.github.io/styleguide/pyguide.html"=
>Google Python
Style Guide</a>. Docstrings may extend over multiple lines. Sections are cr=
eated
with a section header and a colon followed by a block of indented text.</p>
<p class=3D"rubric">Example</p>
<p>Examples can be given using either the <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">Example</span></code> or <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">Examples</span></code>
sections. Sections support any reStructuredText formatting, including
literal blocks:</p>
<div class=3D"highlight-default notranslate"><div class=3D"highlight"><pre>=
<span></span>$ python example_google.py
</pre></div>
</div>
<p>Section breaks are created by resuming unindented text. Section breaks
are also implicitly created anytime a new section starts.</p>
<dl class=3D"attribute">
<dt id=3D"example_google.module_level_variable1">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">module_level_variable1</code><a class=3D"headerlink" href=3D"http://10.11=
.12.13/sphinx/docs/_build/index.html#example_google.module_level_variable1"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Module level variables may be documented in
either the <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>Attributes</span></code> section of the module docstring, or in an
inline docstring immediately following the variable.</p>
<p>Either form is acceptable, but the two should not be mixed. Choose
one convention to document module level variables and be consistent
with it.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>int</p>
</dd>
</dl>
</dd></dl>

<div class=3D"admonition-todo admonition" id=3D"index-0">
<p class=3D"admonition-title">Todo</p>
<ul class=3D"simple">
<li><p>For module TODOs</p></li>
<li><p>You have to also use <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">sphinx.ext.todo</span></code> extension</p></li>
</ul>
</div>
<dl class=3D"class">
<dt id=3D"example_google.ExampleClass">
<em class=3D"property">class </em><code class=3D"descclassname">example_goo=
gle.</code><code class=3D"descname">ExampleClass</code><span class=3D"sig-p=
aren">(</span><em>param1</em>, <em>param2</em>, <em>param3</em><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://localhost/s=
phinx/docs/_build/index.html#example_google.ExampleClass" title=3D"Permalin=
k to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>The summary line for a class docstring should fit on one line.</p>
<p>If the class has public attributes, they may be documented here
in an <code class=3D"docutils literal notranslate"><span class=3D"pre">Attr=
ibutes</span></code> section and follow the same formatting as a
function=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Args</span></code> section. Alternatively, attributes may be docum=
ented
inline with the attribute=E2=80=99s declaration (see __init__ method below)=
.</p>
<p>Properties created with the <code class=3D"docutils literal notranslate"=
><span class=3D"pre">@property</span></code> decorator should be documented
in the property=E2=80=99s getter method.</p>
<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.attr1">
<code class=3D"descname">attr1</code><a class=3D"headerlink" href=3D"http:/=
/localhost/sphinx/docs/_build/index.html#example_google.ExampleClass.attr=
1" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Description of <cite>attr1</cite>.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>str</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.attr2">
<code class=3D"descname">attr2</code><a class=3D"headerlink" href=3D"http:/=
/localhost/sphinx/docs/_build/index.html#example_google.ExampleClass.attr=
2" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Description of <cite>attr2</cite>.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p><code class=3D"xref py py-obj docutils literal n=
otranslate"><span class=3D"pre">int</span></code>, optional</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.attr3">
<code class=3D"descname">attr3</code><em class=3D"property"> =3D None</em><=
a class=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.=
html#example_google.ExampleClass.attr3" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><p>Doc comment <em>inline</em> with attribute</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.attr4">
<code class=3D"descname">attr4</code><em class=3D"property"> =3D None</em><=
a class=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.=
html#example_google.ExampleClass.attr4" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><p>Doc comment <em>before</em> attribute, with type specified</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>list of str</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.attr5">
<code class=3D"descname">attr5</code><em class=3D"property"> =3D None</em><=
a class=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.=
html#example_google.ExampleClass.attr5" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><p>Docstring <em>after</em> attribute, with type specified.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>str</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"method">
<dt id=3D"example_google.ExampleClass.example_method">
<code class=3D"descname">example_method</code><span class=3D"sig-paren">(</=
span><em>param1</em>, <em>param2</em><span class=3D"sig-paren">)</span><a c=
lass=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.htm=
l#example_google.ExampleClass.example_method" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><p>Class methods are similar to regular functions.</p>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>Do not include the <cite>self</cite> parameter in the <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">Args</span></code> section.<=
/p>
</div>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>param1</strong> =E2=80=93 The first parameter.</p></li>
<li><p><strong>param2</strong> =E2=80=93 The second parameter.</p></li>
</ul>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><p>True if successful, False otherwise.</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.readonly_property">
<code class=3D"descname">readonly_property</code><a class=3D"headerlink" hr=
ef=3D"http://localhost/sphinx/docs/_build/index.html#example_google.Examp=
leClass.readonly_property" title=3D"Permalink to this definition">=C2=B6</a=
></dt>
<dd><p>Properties should be documented in their getter method.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>str</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleClass.readwrite_property">
<code class=3D"descname">readwrite_property</code><a class=3D"headerlink" h=
ref=3D"http://localhost/sphinx/docs/_build/index.html#example_google.Exam=
pleClass.readwrite_property" title=3D"Permalink to this definition">=C2=B6<=
/a></dt>
<dd><p>Properties with both a getter and setter
should only be documented in their getter method.</p>
<p>If the setter method contains notable behavior, it should be
mentioned here.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p><code class=3D"xref py py-obj docutils literal n=
otranslate"><span class=3D"pre">list</span></code> of <code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">str</span></code=
></p>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class=3D"exception">
<dt id=3D"example_google.ExampleError">
<em class=3D"property">exception </em><code class=3D"descclassname">example=
_google.</code><code class=3D"descname">ExampleError</code><span class=3D"s=
ig-paren">(</span><em>msg</em>, <em>code</em><span class=3D"sig-paren">)</s=
pan><a class=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/i=
ndex.html#example_google.ExampleError" title=3D"Permalink to this definitio=
n">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">Exception</span></code></p>
<p>Exceptions are documented in the same way as classes.</p>
<p>The __init__ method may be documented in either the class level
docstring, or as a docstring on the __init__ method itself.</p>
<p>Either form is acceptable, but the two should not be mixed. Choose one
convention to document the __init__ method and be consistent with it.</p>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>Do not include the <cite>self</cite> parameter in the <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">Args</span></code> section.<=
/p>
</div>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>msg</strong> (<em>str</em>) =E2=80=93 Human readable string =
describing the exception.</p></li>
<li><p><strong>code</strong> (<code class=3D"xref py py-obj docutils litera=
l notranslate"><span class=3D"pre">int</span></code>, optional) =E2=80=93 E=
rror code.</p></li>
</ul>
</dd>
</dl>
<dl class=3D"attribute">
<dt id=3D"example_google.ExampleError.msg">
<code class=3D"descname">msg</code><a class=3D"headerlink" href=3D"http://1=
0.11.12.13/sphinx/docs/_build/index.html#example_google.ExampleError.msg" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Human readable string describing the exception.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>str</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"example_google.ExampleError.code">
<code class=3D"descname">code</code><a class=3D"headerlink" href=3D"http://=
localhost/sphinx/docs/_build/index.html#example_google.ExampleError.code"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Exception error code.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>int</p>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class=3D"function">
<dt id=3D"example_google.example_generator">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">example_generator</code><span class=3D"sig-paren">(</span><em>n</em><span=
 class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://10.11.1=
2.13/sphinx/docs/_build/index.html#example_google.example_generator" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Generators have a <code class=3D"docutils literal notranslate"><span=
 class=3D"pre">Yields</span></code> section instead of a <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">Returns</span></code> sectio=
n.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><p><strong>n</strong> (<em>int</em>) =E2=80=93 The =
upper limit of the range to generate, from 0 to <cite>n</cite> - 1.</p>
</dd>
<dt class=3D"field-even">Yields</dt>
<dd class=3D"field-even"><p><em>int</em> =E2=80=93 The next number in the r=
ange of 0 to <cite>n</cite> - 1.</p>
</dd>
</dl>
<p class=3D"rubric">Examples</p>
<p>Examples should be written in doctest format, and should illustrate how
to use the function.</p>
<div class=3D"highlight-default notranslate"><div class=3D"highlight"><pre>=
<span></span><span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">prin=
t</span><span class=3D"p">([</span><span class=3D"n">i</span> <span class=
=3D"k">for</span> <span class=3D"n">i</span> <span class=3D"ow">in</span> <=
span class=3D"n">example_generator</span><span class=3D"p">(</span><span cl=
ass=3D"mi">4</span><span class=3D"p">)])</span>
<span class=3D"go">[0, 1, 2, 3]</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"function">
<dt id=3D"example_google.function_with_pep484_type_annotations">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">function_with_pep484_type_annotations</code><span class=3D"sig-paren">(</=
span><em>param1: int</em>, <em>param2: str</em><span class=3D"sig-paren">)<=
/span> =E2=86=92 bool<a class=3D"headerlink" href=3D"http://localhost/sph=
inx/docs/_build/index.html#example_google.function_with_pep484_type_annotat=
ions" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Example function with PEP 484 type annotations.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>param1</strong> =E2=80=93 The first parameter.</p></li>
<li><p><strong>param2</strong> =E2=80=93 The second parameter.</p></li>
</ul>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><p>The return value. True for success, False other=
wise.</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"function">
<dt id=3D"example_google.function_with_types_in_docstring">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">function_with_types_in_docstring</code><span class=3D"sig-paren">(</span>=
<em>param1</em>, <em>param2</em><span class=3D"sig-paren">)</span><a class=
=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.html#ex=
ample_google.function_with_types_in_docstring" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><p>Example function with types documented in the docstring.</p>
<p><a class=3D"reference external" href=3D"https://www.python.org/dev/peps/=
pep-0484/">PEP 484</a> type annotations are supported. If attribute, parame=
ter, and
return types are annotated according to <a class=3D"reference external" hre=
f=3D"https://www.python.org/dev/peps/pep-0484/">PEP 484</a>, they do not ne=
ed to be
included in the docstring:</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>param1</strong> (<em>int</em>) =E2=80=93 The first parameter=
.</p></li>
<li><p><strong>param2</strong> (<em>str</em>) =E2=80=93 The second paramete=
r.</p></li>
</ul>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><p>The return value. True for success, False other=
wise.</p>
</dd>
<dt class=3D"field-odd">Return type</dt>
<dd class=3D"field-odd"><p>bool</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"function">
<dt id=3D"example_google.module_level_function">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">module_level_function</code><span class=3D"sig-paren">(</span><em>param1<=
/em>, <em>param2=3DNone</em>, <em>*args</em>, <em>**kwargs</em><span class=
=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://localhost/s=
phinx/docs/_build/index.html#example_google.module_level_function" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>This is an example of a module level function.</p>
<p>Function parameters should be documented in the <code class=3D"docutils =
literal notranslate"><span class=3D"pre">Args</span></code> section. The na=
me
of each parameter is required. The type and description of each parameter
is optional, but should be included if not obvious.</p>
<p>If *args or **kwargs are accepted,
they should be listed as <code class=3D"docutils literal notranslate"><span=
 class=3D"pre">*args</span></code> and <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">**kwargs</span></code>.</p>
<p>The format for a parameter is:</p>
<div class=3D"highlight-default notranslate"><div class=3D"highlight"><pre>=
<span></span><span class=3D"n">name</span> <span class=3D"p">(</span><span =
class=3D"nb">type</span><span class=3D"p">):</span> <span class=3D"n">descr=
iption</span>
    <span class=3D"n">The</span> <span class=3D"n">description</span> <span=
 class=3D"n">may</span> <span class=3D"n">span</span> <span class=3D"n">mul=
tiple</span> <span class=3D"n">lines</span><span class=3D"o">.</span> <span=
 class=3D"n">Following</span>
    <span class=3D"n">lines</span> <span class=3D"n">should</span> <span cl=
ass=3D"n">be</span> <span class=3D"n">indented</span><span class=3D"o">.</s=
pan> <span class=3D"n">The</span> <span class=3D"s2">"(type)"</span> <span =
class=3D"ow">is</span> <span class=3D"n">optional</span><span class=3D"o">.=
</span>

    <span class=3D"n">Multiple</span> <span class=3D"n">paragraphs</span> <=
span class=3D"n">are</span> <span class=3D"n">supported</span> <span class=
=3D"ow">in</span> <span class=3D"n">parameter</span>
    <span class=3D"n">descriptions</span><span class=3D"o">.</span>
</pre></div>
</div>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><ul class=3D"simple">
<li><p><strong>param1</strong> (<em>int</em>) =E2=80=93 The first parameter=
.</p></li>
<li><p><strong>param2</strong> (<code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">str</span></code>, optional) =E2=80=93=
 The second parameter. Defaults to None.
Second line of description should be indented.</p></li>
<li><p><strong>*args</strong> =E2=80=93 Variable length argument list.</p><=
/li>
<li><p><strong>**kwargs</strong> =E2=80=93 Arbitrary keyword arguments.</p>=
</li>
</ul>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><p></p><p>True if successful, False otherwise.</p>
<p>The return type is optional and may be specified at the beginning of
the <code class=3D"docutils literal notranslate"><span class=3D"pre">Return=
s</span></code> section followed by a colon.</p>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">Ret=
urns</span></code> section may span multiple lines and paragraphs.
Following lines should be indented to match the first line.</p>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">Ret=
urns</span></code> section supports any reStructuredText formatting,
including literal blocks:</p>
<div class=3D"highlight-default notranslate"><div class=3D"highlight"><pre>=
<span></span><span class=3D"p">{</span>
    <span class=3D"s1">'param1'</span><span class=3D"p">:</span> <span clas=
s=3D"n">param1</span><span class=3D"p">,</span>
    <span class=3D"s1">'param2'</span><span class=3D"p">:</span> <span clas=
s=3D"n">param2</span>
<span class=3D"p">}</span>
</pre></div>
</div>
<p></p>
</dd>
<dt class=3D"field-odd">Return type</dt>
<dd class=3D"field-odd"><p>bool</p>
</dd>
<dt class=3D"field-even">Raises</dt>
<dd class=3D"field-even"><ul class=3D"simple">
<li><p><strong>AttributeError</strong> =E2=80=93 The <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">Raises</span></code> section is =
a list of all exceptions
    that are relevant to the interface.</p></li>
<li><p><strong>ValueError</strong> =E2=80=93 If <cite>param2</cite> is equa=
l to <cite>param1</cite>.</p></li>
</ul>
</dd>
</dl>
</dd></dl>

<dl class=3D"data">
<dt id=3D"example_google.module_level_variable2">
<code class=3D"descclassname">example_google.</code><code class=3D"descname=
">module_level_variable2</code><em class=3D"property"> =3D 98765</em><a cla=
ss=3D"headerlink" href=3D"http://localhost/sphinx/docs/_build/index.html#=
example_google.module_level_variable2" title=3D"Permalink to this definitio=
n">=C2=B6</a></dt>
<dd><p>Module level variable documented inline.</p>
<p>The docstring may span multiple lines. The type may optionally be specif=
ied
on the first line, separated by a colon.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Type</dt>
<dd class=3D"field-odd"><p>int</p>
</dd>
</dl>
</dd></dl>

</div>
</div>
</div>


          </div>
        </div>
      </div>
      <div class=3D"clearer"></div>
    </div>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://localhost/sph=
inx/docs/_build/index.html#document-index">Example Google Style Python Docstrings</a> =C2=
=BB</li>=20
      </ul>
    </div>
    <div class=3D"footer" role=3D"contentinfo">
        =C2=A9 Copyright 2019, test.
      Created using <a href=3D"http://sphinx-doc.org/">Sphinx</a> 2.0.1.
    </div>
 =20
</body></html>
------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost/sphinx/docs/_build/_static/bizstyle.css

@charset "utf-8";

@import url("basic.css");

body { font-family: "Lucida Grande", "Lucida Sans Unicode", Geneva, Verdana=
, sans-serif; font-size: 14px; letter-spacing: -0.01em; line-height: 150%; =
text-align: center; background-color: white; background-image: url("backgro=
und_b01.png"); color: black; padding: 0px; border-right: 1px solid rgb(51, =
102, 153); border-left: 1px solid rgb(51, 102, 153); margin: 0px 40px; }

div.document { background-color: white; text-align: left; background-repeat=
: repeat-x; box-shadow: rgb(0, 0, 0) 2px 2px 5px; }

div.bodywrapper { margin: 0px 0px 0px 240px; border-left: 1px solid rgb(204=
, 204, 204); }

div.body { margin: 0px; padding: 0.5em 20px 20px; }

div.related { font-size: 1em; box-shadow: rgb(0, 0, 0) 2px 2px 5px; }

div.related ul { background-color: rgb(51, 102, 153); height: 100%; overflo=
w: hidden; border-top: 1px solid rgb(221, 221, 221); border-bottom: 1px sol=
id rgb(221, 221, 221); }

div.related ul li { color: white; margin: 0px; padding: 0px; height: 2em; f=
loat: left; }

div.related ul li.right { float: right; margin-right: 5px; }

div.related ul li a { margin: 0px; padding: 0px 5px; line-height: 1.75em; c=
olor: rgb(255, 255, 255); }

div.related ul li a:hover { color: rgb(255, 255, 255); text-decoration: und=
erline; }

div.sphinxsidebarwrapper { padding: 0px; }

div.sphinxsidebar { margin: 0px; padding: 0.5em 12px 12px; width: 210px; fo=
nt-size: 1em; text-align: left; }

div.sphinxsidebar h3, div.sphinxsidebar h4 { margin: 1em 0px 0.5em; font-si=
ze: 1em; padding: 0.1em 0px 0.1em 0.5em; color: white; border: 1px solid rg=
b(51, 102, 153); background-color: rgb(51, 102, 153); }

div.sphinxsidebar h3 a { color: white; }

div.sphinxsidebar ul { margin-top: 7px; padding: 0px; line-height: 130%; }

div.sphinxsidebar ul ul { margin-left: 20px; }

div.sphinxsidebar input { border: 1px solid rgb(51, 102, 153); }

div.footer { background-color: white; color: rgb(51, 102, 153); padding: 3p=
x 8px 3px 0px; clear: both; font-size: 0.8em; text-align: right; border-bot=
tom: 1px solid rgb(51, 102, 153); box-shadow: rgb(0, 0, 0) 2px 2px 5px; }

div.footer a { color: rgb(51, 102, 153); text-decoration: underline; }

p { margin: 0.8em 0px 0.5em; }

a { color: rgb(51, 102, 153); text-decoration: none; }

a:hover { color: rgb(51, 102, 153); text-decoration: underline; }

div.body a { text-decoration: underline; }

h1, h2, h3 { color: rgb(51, 102, 153); }

h1 { margin: 0px; padding: 0.7em 0px 0.3em; font-size: 1.5em; }

h2 { margin: 1.3em 0px 0.2em; font-size: 1.35em; padding-bottom: 0.5em; bor=
der-bottom: 1px solid rgb(51, 102, 153); }

h3 { margin: 1em 0px -0.3em; font-size: 1.2em; padding-bottom: 0.3em; borde=
r-bottom: 1px solid rgb(204, 204, 204); }

div.body h1 a, div.body h2 a, div.body h3 a, div.body h4 a, div.body h5 a, =
div.body h6 a { color: black !important; }

h1 a.anchor, h2 a.anchor, h3 a.anchor, h4 a.anchor, h5 a.anchor, h6 a.ancho=
r { display: none; margin: 0px 0px 0px 0.3em; padding: 0px 0.2em; color: rg=
b(170, 170, 170) !important; }

h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor,=
 h5:hover a.anchor, h6:hover a.anchor { display: inline; }

h1 a.anchor:hover, h2 a.anchor:hover, h3 a.anchor:hover, h4 a.anchor:hover,=
 h5 a.anchor:hover, h6 a.anchor:hover { color: rgb(119, 119, 119); backgrou=
nd-color: rgb(238, 238, 238); }

a.headerlink { font-size: 1em; margin-left: 6px; padding: 0px 4px; color: r=
gb(198, 15, 15) !important; text-decoration: none !important; }

a.headerlink:hover { background-color: rgb(204, 204, 204); color: white !im=
portant; }

cite, code, tt { font-family: Consolas, "Deja Vu Sans Mono", "Bitstream Ver=
a Sans Mono", monospace; font-size: 0.95em; letter-spacing: 0.01em; }

code { background-color: rgb(242, 242, 242); border-bottom: 1px solid rgb(2=
21, 221, 221); color: rgb(51, 51, 51); }

code.descname, code.descclassname, code.xref { border: 0px; }

hr { border: 1px solid rgb(170, 187, 204); margin: 2em; }

a code { border: 0px; color: rgb(202, 121, 0); }

a code:hover { color: rgb(36, 145, 207); }

pre { font-family: Consolas, "Deja Vu Sans Mono", "Bitstream Vera Sans Mono=
", monospace; font-size: 0.95em; letter-spacing: 0.015em; line-height: 120%=
; padding: 0.5em; border-right: 5px solid rgb(204, 204, 204); border-left: =
5px solid rgb(204, 204, 204); background-color: transparent !important; }

pre a { color: inherit; text-decoration: underline; }

td.linenos pre { padding: 0.5em 0px; }

div.quotebar { background-color: rgb(248, 248, 248); max-width: 250px; floa=
t: right; padding: 2px 7px; border: 1px solid rgb(204, 204, 204); }

div.topic { background-color: rgb(248, 248, 248); }

table { border-collapse: collapse; margin: 0px -0.5em; }

table td, table th { padding: 0.2em 0.5em; }

div.admonition { font-size: 0.9em; margin: 1em 0px; border: 3px solid rgb(2=
04, 204, 204); background-color: rgb(247, 247, 247); padding: 0px; }

div.admonition p { margin: 0.5em 1em; padding: 0px; }

div.admonition li p { margin-left: 0px; }

div.admonition pre, div.warning pre { margin: 0px; }

div.highlight { margin: 0.4em 1em; }

div.admonition p.admonition-title { margin: 0px; padding: 0.1em 0px 0.1em 0=
.5em; color: white; border-bottom: 3px solid rgb(204, 204, 204); font-weigh=
t: bold; background-color: rgb(22, 94, 131); }

div.danger { border: 3px solid rgb(240, 144, 141); background-color: rgb(24=
0, 207, 160); }

div.error { border: 3px solid rgb(240, 144, 141); background-color: rgb(237=
, 228, 205); }

div.warning { border: 3px solid rgb(248, 184, 98); background-color: rgb(24=
0, 207, 160); }

div.caution { border: 3px solid rgb(248, 184, 98); background-color: rgb(23=
7, 228, 205); }

div.attention { border: 3px solid rgb(248, 184, 98); background-color: rgb(=
243, 243, 243); }

div.important { border: 3px solid rgb(240, 207, 160); background-color: rgb=
(237, 228, 205); }

div.note { border: 3px solid rgb(240, 207, 160); background-color: rgb(243,=
 243, 243); }

div.hint { border: 3px solid rgb(190, 210, 195); background-color: rgb(243,=
 243, 243); }

div.tip { border: 3px solid rgb(190, 210, 195); background-color: rgb(243, =
243, 243); }

div.danger p.admonition-title, div.error p.admonition-title { background-co=
lor: rgb(183, 40, 46); border-bottom: 3px solid rgb(240, 144, 141); }

div.caution p.admonition-title, div.warning p.admonition-title, div.attenti=
on p.admonition-title { background-color: rgb(241, 144, 114); border-bottom=
: 3px solid rgb(248, 184, 98); }

div.note p.admonition-title, div.important p.admonition-title { background-=
color: rgb(248, 184, 98); border-bottom: 3px solid rgb(240, 207, 160); }

div.hint p.admonition-title, div.tip p.admonition-title { background-color:=
 rgb(126, 190, 165); border-bottom: 3px solid rgb(190, 210, 195); }

div.admonition ul, div.admonition ol, div.warning ul, div.warning ol { marg=
in: 0.1em 0.5em 0.5em 3em; padding: 0px; }

div.versioninfo { margin: 1em 0px 0px; border: 1px solid rgb(204, 204, 204)=
; background-color: rgb(221, 234, 240); padding: 8px; line-height: 1.3em; f=
ont-size: 0.9em; }

.viewcode-back { font-family: "Lucida Grande", "Lucida Sans Unicode", Genev=
a, Verdana, sans-serif; }

div.viewcode-block:target { background-color: rgb(244, 222, 191); border-to=
p: 1px solid rgb(170, 204, 153); border-bottom: 1px solid rgb(170, 204, 153=
); }

p.versionchanged span.versionmodified { font-size: 0.9em; margin-right: 0.2=
em; padding: 0.1em; background-color: rgb(220, 230, 160); }

dl.field-list > dt { color: white; padding-left: 0.5em; padding-right: 5px;=
 background-color: rgb(130, 160, 190); }

dl.field-list > dd { padding-left: 0.5em; margin-top: 0em; margin-left: 0em=
; background-color: rgb(247, 247, 247); }

table.docutils { margin: 1em 0px; padding: 0px; border: 1px solid white; ba=
ckground-color: rgb(247, 247, 247); }

table.docutils td, table.docutils th { padding: 1px 8px 1px 5px; border-wid=
th: 0px 1px 1px 0px; border-top-style: initial; border-top-color: initial; =
border-left-style: initial; border-left-color: initial; border-right-style:=
 solid; border-right-color: white; border-bottom-style: solid; border-botto=
m-color: white; }

table.docutils td p { margin-top: 0px; margin-bottom: 0.3em; }

table.field-list td, table.field-list th { word-break: break-word; border: =
0px !important; }

table.footnote td, table.footnote th { border: 0px !important; }

th { color: white; text-align: left; padding-right: 5px; background-color: =
rgb(130, 160, 190); }

div.literal-block-wrapper div.code-block-caption { background-color: rgb(23=
8, 238, 238); border-style: solid; border-color: rgb(204, 204, 204); border=
-width: 1px 5px; }

@media only screen and (min-width: 1176px) {
  body { margin: 0px 40px; }
}

@media only screen and (max-width: 991px) and (min-width: 768px) {
  body { margin: 0px 40px; }
}

@media only screen and (max-width: 767px) {
  body { margin: 0px; }
  div.bodywrapper { margin: 0px; width: 100%; border: none; }
  div.sphinxsidebar { display: none; }
}

@media only screen and (max-width: 767px) and (min-width: 480px) {
  body { margin: 0px 20px; }
}

@media only screen and (-webkit-min-device-pixel-ratio: 2), not all {
}
------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost/sphinx/docs/_build/_static/basic.css

@charset "utf-8";

div.clearer { clear: both; }

div.related { width: 100%; font-size: 90%; }

div.related h3 { display: none; }

div.related ul { margin: 0px; padding: 0px 0px 0px 10px; list-style: none; =
}

div.related li { display: inline; }

div.related li.right { float: right; margin-right: 5px; }

div.sphinxsidebarwrapper { padding: 10px 5px 0px 10px; }

div.sphinxsidebar { float: left; width: 230px; margin-left: -100%; font-siz=
e: 90%; overflow-wrap: break-word; }

div.sphinxsidebar ul { list-style: none; }

div.sphinxsidebar ul ul, div.sphinxsidebar ul.want-points { margin-left: 20=
px; list-style: square; }

div.sphinxsidebar ul ul { margin-top: 0px; margin-bottom: 0px; }

div.sphinxsidebar form { margin-top: 10px; }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

div.sphinxsidebar #searchbox form.search { overflow: hidden; }

div.sphinxsidebar #searchbox input[type=3D"text"] { float: left; width: 80%=
; padding: 0.25em; box-sizing: border-box; }

div.sphinxsidebar #searchbox input[type=3D"submit"] { float: left; width: 2=
0%; border-left: none; padding: 0.25em; box-sizing: border-box; }

img { border: 0px; max-width: 100%; }

ul.search { margin: 10px 0px 0px 20px; padding: 0px; }

ul.search li { padding: 5px 0px 5px 20px; background-image: url("file.png")=
; background-repeat: no-repeat; background-position: 0px 7px; }

ul.search li a { font-weight: bold; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 2px 0px 0px 3=
0px; text-align: left; }

ul.keywordmatches li.goodmatch a { font-weight: bold; }

table.contentstable { width: 90%; margin-left: auto; margin-right: auto; }

table.contentstable p.biglink { line-height: 150%; }

a.biglink { font-size: 1.3em; }

span.linkdescr { font-style: italic; padding-top: 5px; font-size: 90%; }

table.indextable { width: 100%; }

table.indextable td { text-align: left; vertical-align: top; }

table.indextable ul { margin-top: 0px; margin-bottom: 0px; list-style-type:=
 none; }

table.indextable > tbody > tr > td > ul { padding-left: 0em; }

table.indextable tr.pcap { height: 10px; }

table.indextable tr.cap { margin-top: 10px; background-color: rgb(242, 242,=
 242); }

img.toggler { margin-right: 3px; margin-top: 3px; cursor: pointer; }

div.modindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

div.genindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

table.modindextable td { padding: 2px; border-collapse: collapse; }

div.body { min-width: 450px; max-width: 800px; }

div.body p, div.body dd, div.body li, div.body blockquote { }

a.headerlink { visibility: hidden; }

a.brackets::before, span.brackets > a::before { content: "["; }

a.brackets::after, span.brackets > a::after { content: "]"; }

h1:hover > a.headerlink, h2:hover > a.headerlink, h3:hover > a.headerlink, =
h4:hover > a.headerlink, h5:hover > a.headerlink, h6:hover > a.headerlink, =
dt:hover > a.headerlink, caption:hover > a.headerlink, p.caption:hover > a.=
headerlink, div.code-block-caption:hover > a.headerlink { visibility: visib=
le; }

div.body p.caption { text-align: inherit; }

div.body td { text-align: left; }

.first { margin-top: 0px !important; }

p.rubric { margin-top: 30px; font-weight: bold; }

img.align-left, .figure.align-left, object.align-left { clear: left; float:=
 left; margin-right: 1em; }

img.align-right, .figure.align-right, object.align-right { clear: right; fl=
oat: right; margin-left: 1em; }

img.align-center, .figure.align-center, object.align-center { display: bloc=
k; margin-left: auto; margin-right: auto; }

.align-left { text-align: left; }

.align-center { text-align: center; }

.align-right { text-align: right; }

div.sidebar { margin: 0px 0px 0.5em 1em; border: 1px solid rgb(221, 221, 18=
7); padding: 7px 7px 0px; background-color: rgb(255, 255, 238); width: 40%;=
 float: right; }

p.sidebar-title { font-weight: bold; }

div.topic { border: 1px solid rgb(204, 204, 204); padding: 7px 7px 0px; mar=
gin: 10px 0px; }

p.topic-title { font-size: 1.1em; font-weight: bold; margin-top: 10px; }

div.admonition { margin-top: 10px; margin-bottom: 10px; padding: 7px; }

div.admonition dt { font-weight: bold; }

div.admonition dl { margin-bottom: 0px; }

p.admonition-title { margin: 0px 10px 5px 0px; font-weight: bold; }

div.body p.centered { text-align: center; margin-top: 25px; }

table.docutils { border: 0px; border-collapse: collapse; }

table.align-center { margin-left: auto; margin-right: auto; }

table caption span.caption-number { font-style: italic; }

table caption span.caption-text { }

table.docutils td, table.docutils th { padding: 1px 8px 1px 5px; border-wid=
th: 0px 0px 1px; border-top-style: initial; border-top-color: initial; bord=
er-left-style: initial; border-left-color: initial; border-right-style: ini=
tial; border-right-color: initial; border-bottom-style: solid; border-botto=
m-color: rgb(170, 170, 170); }

table.footnote td, table.footnote th { border: 0px !important; }

th { text-align: left; padding-right: 5px; }

table.citation { border-left: 1px solid gray; margin-left: 1px; }

table.citation td { border-bottom: none; }

th > p:first-child, td > p:first-child { margin-top: 0px; }

th > p:last-child, td > p:last-child { margin-bottom: 0px; }

div.figure { margin: 0.5em; padding: 0.5em; }

div.figure p.caption { padding: 0.3em; }

div.figure p.caption span.caption-number { font-style: italic; }

div.figure p.caption span.caption-text { }

table.field-list td, table.field-list th { border: 0px !important; }

.field-list ul { margin: 0px; padding-left: 1em; }

.field-list p { margin: 0px; }

.field-name { hyphens: manual; }

table.hlist td { vertical-align: top; }

ol.arabic { list-style: decimal; }

ol.loweralpha { list-style: lower-alpha; }

ol.upperalpha { list-style: upper-alpha; }

ol.lowerroman { list-style: lower-roman; }

ol.upperroman { list-style: upper-roman; }

li > p:first-child { margin-top: 0px; }

li > p:last-child { margin-bottom: 0px; }

dl.footnote > dt, dl.citation > dt { float: left; }

dl.footnote > dd, dl.citation > dd { margin-bottom: 0em; }

dl.footnote > dd::after, dl.citation > dd::after { content: ""; clear: both=
; }

dl.field-list { display: flex; flex-wrap: wrap; }

dl.field-list > dt { flex-basis: 20%; font-weight: bold; word-break: break-=
word; }

dl.field-list > dt::after { content: ":"; }

dl.field-list > dd { flex-basis: 70%; padding-left: 1em; margin-left: 0em; =
margin-bottom: 0em; }

dl { margin-bottom: 15px; }

dd > p:first-child { margin-top: 0px; }

dd ul, dd table { margin-bottom: 10px; }

dd { margin-top: 3px; margin-bottom: 10px; margin-left: 30px; }

dt:target, span.highlighted { background-color: rgb(251, 229, 78); }

rect.highlighted { fill: rgb(251, 229, 78); }

dl.glossary dt { font-weight: bold; font-size: 1.1em; }

.optional { font-size: 1.3em; }

.sig-paren { font-size: larger; }

.versionmodified { font-style: italic; }

.system-message { background-color: rgb(255, 221, 170); padding: 5px; borde=
r: 3px solid red; }

.footnote:target { background-color: rgb(255, 255, 170); }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

.line-block .line-block { margin-top: 0px; margin-bottom: 0px; margin-left:=
 1.5em; }

.guilabel, .menuselection { font-family: sans-serif; }

.accelerator { text-decoration: underline; }

.classifier { font-style: oblique; }

.classifier::before { font-style: normal; margin: 0.5em; content: ":"; }

abbr, acronym { border-bottom: 1px dotted; cursor: help; }

pre { overflow: auto hidden; }

span.pre { hyphens: none; }

td.linenos pre { padding: 5px 0px; border: 0px; background-color: transpare=
nt; color: rgb(170, 170, 170); }

table.highlighttable { margin-left: 0.5em; }

table.highlighttable td { padding: 0px 0.5em; }

div.code-block-caption { padding: 2px 5px; font-size: small; }

div.code-block-caption code { background-color: transparent; }

div.code-block-caption + div > div.highlight > pre { margin-top: 0px; }

div.code-block-caption span.caption-number { padding: 0.1em 0.3em; font-sty=
le: italic; }

div.code-block-caption span.caption-text { }

div.literal-block-wrapper { padding: 1em 1em 0px; }

div.literal-block-wrapper div.highlight { margin: 0px; }

code.descname { background-color: transparent; font-weight: bold; font-size=
: 1.2em; }

code.descclassname { background-color: transparent; }

code.xref, a code { background-color: transparent; font-weight: bold; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

.viewcode-link { float: right; }

.viewcode-back { float: right; font-family: sans-serif; }

div.viewcode-block:target { margin: -1px -10px; padding: 0px 10px; }

img.math { vertical-align: middle; }

div.body div.math p { text-align: center; }

span.eqno { float: right; }

span.eqno a.headerlink { position: relative; left: 0px; z-index: 1; }

div.math:hover a.headerlink { visibility: visible; }

@media print {
  div.document, div.documentwrapper, div.bodywrapper { width: 100%; margin:=
 0px !important; }
  div.sphinxsidebar, div.related, div.footer, #top-link { display: none; }
}
------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://localhost/sphinx/docs/_build/_static/background_b01.png

iVBORw0KGgoAAAANSUhEUgAAAAMAAAADCAAAAABzQ+pjAAAAFUlEQVR4AWP4f+Y/w5n//xn+/z8D
ADJACF+KQtvjAAAAAElFTkSuQmCC

------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost/sphinx/docs/_build/_static/pygments.css

@charset "utf-8";

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(240, 240, 240); }

.highlight .c { color: rgb(96, 160, 176); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(96, 160, 176); font-style: italic; }

.highlight .cm { color: rgb(96, 160, 176); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(96, 160, 176); font-style: italic; }

.highlight .c1 { color: rgb(96, 160, 176); font-style: italic; }

.highlight .cs { color: rgb(96, 160, 176); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(64, 160, 112); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(64, 160, 112); }

.highlight .mf { color: rgb(64, 160, 112); }

.highlight .mh { color: rgb(64, 160, 112); }

.highlight .mi { color: rgb(64, 160, 112); }

.highlight .mo { color: rgb(64, 160, 112); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(64, 160, 112); }
------MultipartBoundary--wSEjMCFHd7yVeTZUz9hbLhAVUHsMjOzKEGuhp6jesa------
